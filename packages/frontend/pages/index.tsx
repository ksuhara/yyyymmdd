import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { Button, Input, Text } from "@chakra-ui/react";
import contract from "../constants/contract.json";
import { ethers } from "ethers";
import React from "react";
import DatePicker from "react-datepicker";
import "react-datepicker/dist/react-datepicker.css";

const contractAddress = "0x0dca239715F64b42a5305e236F4380424036893a";
const abi = contract.abi;

declare global {
  interface Window {
    ethereum: any;
  }
}

const Home: NextPage = () => {
  const [txHash, setTxHash] = React.useState("");
  const [mintingStatus, setMintingStatus] = React.useState("ended");
  const [tokenId, setTokenId] = React.useState(0);
  const [startDate, setStartDate] = React.useState(new Date() as any);
  const mintNftHandler = async () => {
    try {
      const { ethereum } = window;

      if (ethereum) {
        const provider = new ethers.providers.Web3Provider(ethereum);
        const signer = provider.getSigner();
        const nftContract = new ethers.Contract(contractAddress, abi, signer);
        const address = signer.getAddress();

        const date1 = new Date("1970/01/01") as any;
        const diffTime = Math.abs(startDate - date1);
        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
        console.log(diffDays);
        // let nftTxn = await nftContract.mint(tokenId);

        // console.log("Mining... please wait");
        // setMintingStatus("started");
        // setTxHash(nftTxn.hash);
        // await nftTxn.wait();
        // setMintingStatus("ended");

        // console.log(`Mined, see transaction: https://rinkeby.etherscan.io/tx/${nftTxn.hash}`);
      } else {
        console.log("Ethereum object does not exist");
      }
    } catch (err) {
      console.log(err);
    }
  };
  return (
    <div className={styles.container}>
      <Head>
        <title>YYYYMMDD</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Text>Mint Page</Text>
      <DatePicker
        dateFormat="yyyy/MM/dd"
        minDate={new Date("1970/01/01")}
        maxDate={new Date()}
        selected={startDate}
        showMonthDropdown
        scrollableYearDropdown
        showYearDropdown
        onChange={(date) => setStartDate(date)}
      />
      <Input onChange={(e) => setTokenId(Number(e.target.value))}></Input>
      <Button onClick={mintNftHandler}>mint</Button>
    </div>
  );
};

export default Home;
